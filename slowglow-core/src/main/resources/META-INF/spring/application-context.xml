<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"       
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       ">

    <bean class="com.nayidisha.slowglow.api.PatientCommandHandler">
        <property name="repository" ref="patientRepository"/>
    </bean>

    <axon:event-sourcing-repository id="patientRepository"
                                    aggregate-type="com.nayidisha.slowglow.domain.Patient"
                                    cache-ref="ehcache"
                                    event-bus="eventBus"
                                    event-store="eventStore">
        <axon:snapshotter-trigger event-count-threshold="50" snapshotter-ref="snapshotter"/>
    </axon:event-sourcing-repository>

	<!-- Use only if we need external properties injected into spring managed beans
 	<context:component-scan base-package="org.axonframework.samples.trader.listener"/>
    <util:properties id="external" location="classpath:external-config.properties"/>
     -->
    <context:property-placeholder location="classpath:/slowglow.properties"/>
    
    
    
    
    
    <!-- AXON context -->
    <axon:annotation-config/>
    <context:component-scan base-package="com.nayidisha.slowglow"/>

    <axon:event-bus id="eventBus"/>

    <axon:command-bus id="commandBus">
        <axon:dispatchInterceptors>
            <bean class="org.axonframework.commandhandling.interceptors.BeanValidationInterceptor"/>
        </axon:dispatchInterceptors>
    </axon:command-bus>

    <bean id="snapshotter" class="org.axonframework.eventsourcing.SpringAggregateSnapshotter">
        <property name="eventStore" ref="eventStore"/>
        <property name="executor" ref="taskExecutor"/>
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2"/>
        <property name="maxPoolSize" value="5"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <bean id="ehcache" class="org.axonframework.cache.EhCacheAdapter">

        <constructor-arg name="ehCache" ref="wrappedEhcache"/>
    </bean>

    <bean id="wrappedEhcache" factory-bean="cacheManager" factory-method="getCache">
        <constructor-arg value="testCache"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>

    <beans profile="hsqldb">

        <axon:jdbc-event-store id="eventStore" data-source="dataSource" sql-schema="eventSqlSchema"/>

        <axon:jdbc-saga-repository id="sagaRepository" data-source="dataSource" sql-schema="sagaSqlSchema"/>

        <bean id="eventSqlSchema" class="org.axonframework.eventstore.jdbc.GenericEventSqlSchema"/>
        <bean id="sagaSqlSchema" class="org.axonframework.saga.repository.jdbc.HsqlSagaSqlSchema"/>
    </beans>

    <beans profile="mongodb">
        <bean id="eventStore" class="org.axonframework.eventstore.mongo.MongoEventStore">
            <constructor-arg ref="mongoTemplate"/>
        </bean>

        <bean id="sagaRepository" class="org.axonframework.saga.repository.mongo.MongoSagaRepository">
            <constructor-arg ref="mongoSagaTemplate"/>
            <property name="resourceInjector">
                <bean class="org.axonframework.saga.spring.SpringResourceInjector"/>
            </property>
        </bean>
    </beans>
    
    
    <!-- Persistence -->
    <beans profile="hsqldb">
        <jdbc:embedded-database id="dataSource" type="HSQL"/>
    </beans>

    <beans profile="mongodb">
        <bean id="mongoSpringTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
            <constructor-arg name="mongo" ref="mongo"/>
            <constructor-arg name="databaseName" value="slowglowdb"/>
        </bean>

        <bean id="mongoTemplate" class="org.axonframework.eventstore.mongo.DefaultMongoTemplate">
            <constructor-arg index="0" ref="mongo"/>
            <constructor-arg index="1" value="slowglowdb"/>
            <constructor-arg index="2" value="domainevents"/>
            <constructor-arg index="3" value="snapshotevents"/>
            <constructor-arg index="4">
                <null/>
            </constructor-arg>
            <constructor-arg index="5">
                <null/>
            </constructor-arg>
        </bean>

        <bean id="mongoSagaTemplate" class="org.axonframework.saga.repository.mongo.DefaultMongoTemplate">
            <constructor-arg index="0" ref="mongo"/>
            <constructor-arg index="1" value="slowglowdb"/>
            <constructor-arg index="2" value="snapshotevents"/>
            <constructor-arg index="3">
                <null/>
            </constructor-arg>
            <constructor-arg index="4">
                <null/>
            </constructor-arg>
        </bean>

        <mongo:mongo id="mongo" host="127.0.0.1" port="27017"/>
    </beans>    
    
        
</beans>
